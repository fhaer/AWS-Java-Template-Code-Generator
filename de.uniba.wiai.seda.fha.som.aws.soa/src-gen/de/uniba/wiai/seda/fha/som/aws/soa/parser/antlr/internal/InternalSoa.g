/*
* generated by Xtext
*/
grammar InternalSoa;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.uniba.wiai.seda.fha.som.aws.soa.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.uniba.wiai.seda.fha.som.aws.soa.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uniba.wiai.seda.fha.som.aws.soa.services.SoaGrammarAccess;

}

@parser::members {

 	private SoaGrammarAccess grammarAccess;
 	
    public InternalSoaParser(TokenStream input, SoaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SOA_AwS";	
   	}
   	
   	@Override
   	protected SoaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSOA_AwS
entryRuleSOA_AwS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSOA_AwSRule()); }
	 iv_ruleSOA_AwS=ruleSOA_AwS 
	 { $current=$iv_ruleSOA_AwS.current; } 
	 EOF 
;

// Rule SOA_AwS
ruleSOA_AwS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SOA-AwS:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSOA_AwSAccess().getSOAAwSKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSOA_AwSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSOA_AwSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='v' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSOA_AwSAccess().getVKeyword_2_0());
    }
(
(
		lv_version_3_0=RULE_VERSION_NUMBER
		{
			newLeafNode(lv_version_3_0, grammarAccess.getSOA_AwSAccess().getVersionVERSION_NUMBERTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSOA_AwSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_3_0, 
        		"VERSION_NUMBER");
	    }

)
))?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getSOA_AwSAccess().getVosVOSParserRuleCall_3_0_0()); 
	    }
		lv_vos_5_0=ruleVOS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSOA_AwSRule());
	        }
       		set(
       			$current, 
       			"vos",
        		lv_vos_5_0, 
        		"VOS");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getSOA_AwSAccess().getKosKOSParserRuleCall_3_1_0()); 
	    }
		lv_kos_6_0=ruleKOS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSOA_AwSRule());
	        }
       		set(
       			$current, 
       			"kos",
        		lv_kos_6_0, 
        		"KOS");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSOA_AwSAccess().getUnorderedGroup_3());
	}

)((
(
		{ 
	        newCompositeNode(grammarAccess.getSOA_AwSAccess().getVorgangsservicesVorgangsserviceParserRuleCall_4_0_0()); 
	    }
		lv_vorgangsservices_7_0=ruleVorgangsservice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSOA_AwSRule());
	        }
       		add(
       			$current, 
       			"vorgangsservices",
        		lv_vorgangsservices_7_0, 
        		"Vorgangsservice");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSOA_AwSAccess().getEntityservicesEntityserviceParserRuleCall_4_1_0()); 
	    }
		lv_entityservices_8_0=ruleEntityservice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSOA_AwSRule());
	        }
       		add(
       			$current, 
       			"entityservices",
        		lv_entityservices_8_0, 
        		"Entityservice");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;







// Entry rule entryRuleVorgangsservice
entryRuleVorgangsservice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVorgangsserviceRule()); }
	 iv_ruleVorgangsservice=ruleVorgangsservice 
	 { $current=$iv_ruleVorgangsservice.current; } 
	 EOF 
;

// Rule Vorgangsservice
ruleVorgangsservice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Vorgangsservice' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVorgangsserviceAccess().getVorgangsserviceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVorgangsserviceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorgangsserviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVorgangsserviceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVorgangsserviceAccess().getChoreographieIFInterfaceParserRuleCall_3_0()); 
	    }
		lv_choreographieIF_3_0=ruleInterface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVorgangsserviceRule());
	        }
       		set(
       			$current, 
       			"choreographieIF",
        		lv_choreographieIF_3_0, 
        		"Interface");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVorgangsserviceAccess().getVorgangsservicesElementarVorgangsserviceElementarParserRuleCall_4_0()); 
	    }
		lv_vorgangsservicesElementar_4_0=ruleVorgangsserviceElementar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVorgangsserviceRule());
	        }
       		add(
       			$current, 
       			"vorgangsservicesElementar",
        		lv_vorgangsservicesElementar_4_0, 
        		"VorgangsserviceElementar");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getVorgangsserviceAccess().getWorkflowWorkflowParserRuleCall_5_0()); 
	    }
		lv_workflow_5_0=ruleWorkflow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVorgangsserviceRule());
	        }
       		set(
       			$current, 
       			"workflow",
        		lv_workflow_5_0, 
        		"Workflow");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVorgangsserviceAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleVorgangsserviceElementar
entryRuleVorgangsserviceElementar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVorgangsserviceElementarRule()); }
	 iv_ruleVorgangsserviceElementar=ruleVorgangsserviceElementar 
	 { $current=$iv_ruleVorgangsserviceElementar.current; } 
	 EOF 
;

// Rule VorgangsserviceElementar
ruleVorgangsserviceElementar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getVorgangsserviceElementarAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorgangsserviceElementarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='VOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVorgangsserviceElementarAccess().getVOTKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVorgangsserviceElementarRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getVorgangsserviceElementarAccess().getKomponentenObjekttypVOTCrossReference_2_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVorgangsserviceElementarAccess().getInterfaceInterfaceParserRuleCall_3_0()); 
	    }
		lv_interface_3_0=ruleInterface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVorgangsserviceElementarRule());
	        }
       		set(
       			$current, 
       			"interface",
        		lv_interface_3_0, 
        		"Interface");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInterface
entryRuleInterface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceRule()); }
	 iv_ruleInterface=ruleInterface 
	 { $current=$iv_ruleInterface.current; } 
	 EOF 
;

// Rule Interface
ruleInterface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Interface' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getInterfaceAccess().getNameInterfaceKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Interface");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceAccess().getMethodenServiceMethodeParserRuleCall_2_0()); 
	    }
		lv_methoden_2_0=ruleServiceMethode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceRule());
	        }
       		add(
       			$current, 
       			"methoden",
        		lv_methoden_2_0, 
        		"ServiceMethode");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleServiceMethode
entryRuleServiceMethode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceMethodeRule()); }
	 iv_ruleServiceMethode=ruleServiceMethode 
	 { $current=$iv_ruleServiceMethode.current; } 
	 EOF 
;

// Rule ServiceMethode
ruleServiceMethode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getServiceMethodeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceMethodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceMethodeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_parameter_2_0=RULE_ID
		{
			newLeafNode(lv_parameter_2_0, grammarAccess.getServiceMethodeAccess().getParameterIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceMethodeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"parameter",
        		lv_parameter_2_0, 
        		"ID");
	    }

)
)*	otherlv_3=');' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getServiceMethodeAccess().getRightParenthesisSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleWorkflow
entryRuleWorkflow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkflowRule()); }
	 iv_ruleWorkflow=ruleWorkflow 
	 { $current=$iv_ruleWorkflow.current; } 
	 EOF 
;

// Rule Workflow
ruleWorkflow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Workflow' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkflowAccess().getWorkflowKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWorkflowAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowAccess().getOrchestrierungOrchestrierungParserRuleCall_2_0_0()); 
	    }
		lv_orchestrierung_2_0=ruleOrchestrierung		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowRule());
	        }
       		add(
       			$current, 
       			"orchestrierung",
        		lv_orchestrierung_2_0, 
        		"Orchestrierung");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkflowAccess().getChoreographieChoreographieLokalParserRuleCall_2_1_0()); 
	    }
		lv_choreographie_3_0=ruleChoreographieLokal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkflowRule());
	        }
       		add(
       			$current, 
       			"choreographie",
        		lv_choreographie_3_0, 
        		"ChoreographieLokal");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWorkflowAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleOrchestrierung
entryRuleOrchestrierung returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrchestrierungRule()); }
	 iv_ruleOrchestrierung=ruleOrchestrierung 
	 { $current=$iv_ruleOrchestrierung.current; } 
	 EOF 
;

// Rule Orchestrierung
ruleOrchestrierung returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrchestrierungAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrchestrierungAccess().getBedingungBedingungParserRuleCall_0_1_0()); 
	    }
		lv_bedingung_1_0=ruleBedingung		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrchestrierungRule());
	        }
       		set(
       			$current, 
       			"bedingung",
        		lv_bedingung_1_0, 
        		"Bedingung");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrchestrierungAccess().getRightParenthesisKeyword_0_2());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrchestrierungRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getOrchestrierungAccess().getMethode1ServiceMethodeCrossReference_1_0()); 
	}

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrchestrierungAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrchestrierungRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getOrchestrierungAccess().getMethode2ServiceMethodeCrossReference_3_0()); 
	}

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOrchestrierungAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleChoreographieLokal
entryRuleChoreographieLokal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoreographieLokalRule()); }
	 iv_ruleChoreographieLokal=ruleChoreographieLokal 
	 { $current=$iv_ruleChoreographieLokal.current; } 
	 EOF 
;

// Rule ChoreographieLokal
ruleChoreographieLokal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChoreographieLokalAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoreographieLokalAccess().getBedingungBedingungParserRuleCall_0_1_0()); 
	    }
		lv_bedingung_1_0=ruleBedingung		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoreographieLokalRule());
	        }
       		set(
       			$current, 
       			"bedingung",
        		lv_bedingung_1_0, 
        		"Bedingung");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChoreographieLokalAccess().getRightParenthesisKeyword_0_2());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoreographieLokalRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getChoreographieLokalAccess().getMethode1ServiceMethodeCrossReference_1_0()); 
	}

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getChoreographieLokalAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoreographieLokalRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getChoreographieLokalAccess().getService2ServiceCrossReference_3_0()); 
	}

)
)	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getChoreographieLokalAccess().getFullStopKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoreographieLokalRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getChoreographieLokalAccess().getMethode2ServiceMethodeCrossReference_5_0()); 
	}

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getChoreographieLokalAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleBedingung
entryRuleBedingung returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBedingungRule()); }
	 iv_ruleBedingung=ruleBedingung 
	 { $current=$iv_ruleBedingung.current; } 
	 EOF 
;

// Rule Bedingung
ruleBedingung returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_bedingung_0_0=RULE_ID
		{
			newLeafNode(lv_bedingung_0_0, grammarAccess.getBedingungAccess().getBedingungIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBedingungRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bedingung",
        		lv_bedingung_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleEntityservice
entryRuleEntityservice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityserviceRule()); }
	 iv_ruleEntityservice=ruleEntityservice 
	 { $current=$iv_ruleEntityservice.current; } 
	 EOF 
;

// Rule Entityservice
ruleEntityservice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Entityservice' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityserviceAccess().getEntityserviceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityserviceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityserviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityserviceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityserviceAccess().getInterfaceInterfaceParserRuleCall_3_0()); 
	    }
		lv_interface_3_0=ruleInterface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityserviceRule());
	        }
       		set(
       			$current, 
       			"interface",
        		lv_interface_3_0, 
        		"Interface");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityserviceAccess().getEntitiesEntityParserRuleCall_4_0()); 
	    }
		lv_entities_4_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityserviceRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_4_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityserviceAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='KOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getKOTKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getKomponentenObjekttypKOTCrossReference_2_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getInterfaceInterfaceParserRuleCall_3_0()); 
	    }
		lv_interface_3_0=ruleInterface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"interface",
        		lv_interface_3_0, 
        		"Interface");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;









// Entry rule entryRuleVOS
entryRuleVOS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVOSRule()); }
	 iv_ruleVOS=ruleVOS 
	 { $current=$iv_ruleVOS.current; } 
	 EOF 
;

// Rule VOS
ruleVOS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'VOS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVOSAccess().getNameVOSKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVOSRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "VOS");
	    }

)
)
    |(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVOSAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVOSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVOSAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVOSAccess().getObjekttypenVOTParserRuleCall_2_0_0()); 
	    }
		lv_objekttypen_3_0=ruleVOT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVOSRule());
	        }
       		add(
       			$current, 
       			"objekttypen",
        		lv_objekttypen_3_0, 
        		"VOT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVOSAccess().getBeziehungenInteracts_withParserRuleCall_2_1_0()); 
	    }
		lv_beziehungen_4_0=ruleInteracts_with		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVOSRule());
	        }
       		add(
       			$current, 
       			"beziehungen",
        		lv_beziehungen_4_0, 
        		"Interacts_with");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVOSAccess().getGliederungVOSParserRuleCall_2_2_0()); 
	    }
		lv_gliederung_5_0=ruleVOS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVOSRule());
	        }
       		add(
       			$current, 
       			"gliederung",
        		lv_gliederung_5_0, 
        		"VOS");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVOSAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleKOS
entryRuleKOS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKOSRule()); }
	 iv_ruleKOS=ruleKOS 
	 { $current=$iv_ruleKOS.current; } 
	 EOF 
;

// Rule KOS
ruleKOS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'KOS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getKOSAccess().getNameKOSKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKOSRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "KOS");
	    }

)
)
    |(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getKOSAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKOSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKOSAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getKOSAccess().getObjekttypenKOTParserRuleCall_2_0_0()); 
	    }
		lv_objekttypen_3_0=ruleKOT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKOSRule());
	        }
       		add(
       			$current, 
       			"objekttypen",
        		lv_objekttypen_3_0, 
        		"KOT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getKOSAccess().getBeziehungenBeziehungParserRuleCall_2_1_0()); 
	    }
		lv_beziehungen_4_0=ruleBeziehung		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKOSRule());
	        }
       		add(
       			$current, 
       			"beziehungen",
        		lv_beziehungen_4_0, 
        		"Beziehung");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getKOSAccess().getGliederungKOSParserRuleCall_2_2_0()); 
	    }
		lv_gliederung_5_0=ruleKOS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKOSRule());
	        }
       		add(
       			$current, 
       			"gliederung",
        		lv_gliederung_5_0, 
        		"KOS");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getKOSAccess().getRightCurlyBracketKeyword_3());
    }
)
;







// Entry rule entryRuleVOT
entryRuleVOT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVOTRule()); }
	 iv_ruleVOT=ruleVOT 
	 { $current=$iv_ruleVOT.current; } 
	 EOF 
;

// Rule VOT
ruleVOT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVOTAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVOTRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='VOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVOTAccess().getVOTKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVOTAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVOTRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVOTAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVOTAccess().getAttributeAttributParserRuleCall_4_0_0()); 
	    }
		lv_attribute_4_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVOTRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_4_0, 
        		"Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVOTAccess().getOperatorenOperatorParserRuleCall_4_1_0()); 
	    }
		lv_operatoren_5_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVOTRule());
	        }
       		add(
       			$current, 
       			"operatoren",
        		lv_operatoren_5_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVOTAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleKOT
entryRuleKOT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKOTRule()); }
	 iv_ruleKOT=ruleKOT 
	 { $current=$iv_ruleKOT.current; } 
	 EOF 
;

// Rule KOT
ruleKOT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getKOTAccess().getOOTParserRuleCall_0()); 
    }
    this_OOT_0=ruleOOT
    { 
        $current = $this_OOT_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getKOTAccess().getLOTParserRuleCall_1()); 
    }
    this_LOT_1=ruleLOT
    { 
        $current = $this_LOT_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getKOTAccess().getTOTParserRuleCall_2()); 
    }
    this_TOT_2=ruleTOT
    { 
        $current = $this_TOT_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOOT
entryRuleOOT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOOTRule()); }
	 iv_ruleOOT=ruleOOT 
	 { $current=$iv_ruleOOT.current; } 
	 EOF 
;

// Rule OOT
ruleOOT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOOTAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOOTRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='OOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOOTAccess().getOOTKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getOOTAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOOTRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOOTAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOOTAccess().getAttributeAttributParserRuleCall_4_0_0()); 
	    }
		lv_attribute_4_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOOTRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_4_0, 
        		"Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOOTAccess().getOperatorenOperatorParserRuleCall_4_1_0()); 
	    }
		lv_operatoren_5_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOOTRule());
	        }
       		add(
       			$current, 
       			"operatoren",
        		lv_operatoren_5_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOOTAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLOT
entryRuleLOT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLOTRule()); }
	 iv_ruleLOT=ruleLOT 
	 { $current=$iv_ruleLOT.current; } 
	 EOF 
;

// Rule LOT
ruleLOT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLOTAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLOTRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='LOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLOTAccess().getLOTKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getLOTAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLOTRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLOTAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLOTAccess().getAttributeAttributParserRuleCall_4_0_0()); 
	    }
		lv_attribute_4_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLOTRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_4_0, 
        		"Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLOTAccess().getOperatorenOperatorParserRuleCall_4_1_0()); 
	    }
		lv_operatoren_5_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLOTRule());
	        }
       		add(
       			$current, 
       			"operatoren",
        		lv_operatoren_5_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLOTAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTOT
entryRuleTOT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTOTRule()); }
	 iv_ruleTOT=ruleTOT 
	 { $current=$iv_ruleTOT.current; } 
	 EOF 
;

// Rule TOT
ruleTOT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTOTAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTOTRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='TOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTOTAccess().getTOTKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTOTAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTOTRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTOTAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTOTAccess().getAttributeAttributParserRuleCall_4_0_0()); 
	    }
		lv_attribute_4_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTOTRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_4_0, 
        		"Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTOTAccess().getOperatorenOperatorParserRuleCall_4_1_0()); 
	    }
		lv_operatoren_5_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTOTRule());
	        }
       		add(
       			$current, 
       			"operatoren",
        		lv_operatoren_5_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTOTAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAttribut
entryRuleAttribut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributRule()); }
	 iv_ruleAttribut=ruleAttribut 
	 { $current=$iv_ruleAttribut.current; } 
	 EOF 
;

// Rule Attribut
ruleAttribut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAttributAccess().getTypObjekttypCrossReference_0_0()); 
	}

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	 iv_ruleOperator=ruleOperator 
	 { $current=$iv_ruleOperator.current; } 
	 EOF 
;

// Rule Operator
ruleOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOperatorAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperatorAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getOperatorAccess().getParameterObjekttypCrossReference_2_0()); 
	}

)
)*	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperatorAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperatorAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleBeziehung
entryRuleBeziehung returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBeziehungRule()); }
	 iv_ruleBeziehung=ruleBeziehung 
	 { $current=$iv_ruleBeziehung.current; } 
	 EOF 
;

// Rule Beziehung
ruleBeziehung returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBeziehungAccess().getInteracts_withParserRuleCall_0()); 
    }
    this_Interacts_with_0=ruleInteracts_with
    { 
        $current = $this_Interacts_with_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBeziehungAccess().getIs_aParserRuleCall_1()); 
    }
    this_Is_a_1=ruleIs_a
    { 
        $current = $this_Is_a_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBeziehungAccess().getIs_part_ofParserRuleCall_2()); 
    }
    this_Is_part_of_2=ruleIs_part_of
    { 
        $current = $this_Is_part_of_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInteracts_with
entryRuleInteracts_with returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteracts_withRule()); }
	 iv_ruleInteracts_with=ruleInteracts_with 
	 { $current=$iv_ruleInteracts_with.current; } 
	 EOF 
;

// Rule Interacts_with
ruleInteracts_with returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInteracts_withAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteracts_withRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='interacts_with:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteracts_withAccess().getInteracts_withKeyword_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteracts_withRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInteracts_withAccess().getObjekttyp1ObjekttypCrossReference_2_0()); 
	}

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteracts_withAccess().getKardinalitaetKardinalitaet01ParserRuleCall_3_0_0()); 
	    }
		lv_kardinalitaet_3_1=ruleKardinalitaet01		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteracts_withRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_1, 
        		"Kardinalitaet01");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getInteracts_withAccess().getKardinalitaetKardinalitaet0xParserRuleCall_3_0_1()); 
	    }
		lv_kardinalitaet_3_2=ruleKardinalitaet0x		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteracts_withRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_2, 
        		"Kardinalitaet0x");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getInteracts_withAccess().getKardinalitaetKardinalitaet1xParserRuleCall_3_0_2()); 
	    }
		lv_kardinalitaet_3_3=ruleKardinalitaet1x		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteracts_withRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_3, 
        		"Kardinalitaet1x");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteracts_withRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getInteracts_withAccess().getObjekttyp2ObjekttypCrossReference_4_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInteracts_withAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleIs_a
entryRuleIs_a returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIs_aRule()); }
	 iv_ruleIs_a=ruleIs_a 
	 { $current=$iv_ruleIs_a.current; } 
	 EOF 
;

// Rule Is_a
ruleIs_a returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIs_aAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_aRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='is_a:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIs_aAccess().getIs_aKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIs_aRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getIs_aAccess().getObjekttyp1ObjekttypCrossReference_2_0()); 
	}

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIs_aAccess().getKardinalitaetKardinalitaet01ParserRuleCall_3_0_0()); 
	    }
		lv_kardinalitaet_3_1=ruleKardinalitaet01		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_aRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_1, 
        		"Kardinalitaet01");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIs_aAccess().getKardinalitaetKardinalitaet11ParserRuleCall_3_0_1()); 
	    }
		lv_kardinalitaet_3_2=ruleKardinalitaet11		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_aRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_2, 
        		"Kardinalitaet11");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIs_aRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getIs_aAccess().getObjekttyp2ObjekttypCrossReference_4_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIs_aAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleIs_part_of
entryRuleIs_part_of returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIs_part_ofRule()); }
	 iv_ruleIs_part_of=ruleIs_part_of 
	 { $current=$iv_ruleIs_part_of.current; } 
	 EOF 
;

// Rule Is_part_of
ruleIs_part_of returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIs_part_ofAccess().getAnnotationAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotation_0_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_part_ofRule());
	        }
       		set(
       			$current, 
       			"annotation",
        		lv_annotation_0_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='is_part_of:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIs_part_ofAccess().getIs_part_ofKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIs_part_ofRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getIs_part_ofAccess().getObjekttyp1ObjekttypCrossReference_2_0()); 
	}

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getIs_part_ofAccess().getKardinalitaetKardinalitaet01ParserRuleCall_3_0_0()); 
	    }
		lv_kardinalitaet_3_1=ruleKardinalitaet01		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_part_ofRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_1, 
        		"Kardinalitaet01");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIs_part_ofAccess().getKardinalitaetKardinalitaet0xParserRuleCall_3_0_1()); 
	    }
		lv_kardinalitaet_3_2=ruleKardinalitaet0x		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_part_ofRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_2, 
        		"Kardinalitaet0x");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getIs_part_ofAccess().getKardinalitaetKardinalitaet1xParserRuleCall_3_0_2()); 
	    }
		lv_kardinalitaet_3_3=ruleKardinalitaet1x		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIs_part_ofRule());
	        }
       		set(
       			$current, 
       			"kardinalitaet",
        		lv_kardinalitaet_3_3, 
        		"Kardinalitaet1x");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIs_part_ofRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getIs_part_ofAccess().getObjekttyp2ObjekttypCrossReference_4_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIs_part_ofAccess().getSemicolonKeyword_5());
    }
)
;







// Entry rule entryRuleKardinalitaet01
entryRuleKardinalitaet01 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKardinalitaet01Rule()); }
	 iv_ruleKardinalitaet01=ruleKardinalitaet01 
	 { $current=$iv_ruleKardinalitaet01.current; } 
	 EOF 
;

// Rule Kardinalitaet01
ruleKardinalitaet01 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='--' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKardinalitaet01Access().getHyphenMinusHyphenMinusKeyword_0_0());
    }

    |	otherlv_1='(0,1)' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKardinalitaet01Access().getLeftParenthesisDigitZeroCommaDigitOneRightParenthesisKeyword_0_1());
    }
)(
    {
        $current = forceCreateModelElement(
            grammarAccess.getKardinalitaet01Access().getKardinalitaet01Action_1(),
            $current);
    }
))
;





// Entry rule entryRuleKardinalitaet0x
entryRuleKardinalitaet0x returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKardinalitaet0xRule()); }
	 iv_ruleKardinalitaet0x=ruleKardinalitaet0x 
	 { $current=$iv_ruleKardinalitaet0x.current; } 
	 EOF 
;

// Rule Kardinalitaet0x
ruleKardinalitaet0x returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='->' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKardinalitaet0xAccess().getHyphenMinusGreaterThanSignKeyword_0_0());
    }

    |	otherlv_1='(0,*)' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKardinalitaet0xAccess().getLeftParenthesisDigitZeroCommaAsteriskRightParenthesisKeyword_0_1());
    }
)(
    {
        $current = forceCreateModelElement(
            grammarAccess.getKardinalitaet0xAccess().getKardinalitaet0xAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleKardinalitaet11
entryRuleKardinalitaet11 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKardinalitaet11Rule()); }
	 iv_ruleKardinalitaet11=ruleKardinalitaet11 
	 { $current=$iv_ruleKardinalitaet11.current; } 
	 EOF 
;

// Rule Kardinalitaet11
ruleKardinalitaet11 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='==' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKardinalitaet11Access().getEqualsSignEqualsSignKeyword_0_0());
    }

    |	otherlv_1='(1,1)' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKardinalitaet11Access().getLeftParenthesisDigitOneCommaDigitOneRightParenthesisKeyword_0_1());
    }
)(
    {
        $current = forceCreateModelElement(
            grammarAccess.getKardinalitaet11Access().getKardinalitaet11Action_1(),
            $current);
    }
))
;





// Entry rule entryRuleKardinalitaet1x
entryRuleKardinalitaet1x returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKardinalitaet1xRule()); }
	 iv_ruleKardinalitaet1x=ruleKardinalitaet1x 
	 { $current=$iv_ruleKardinalitaet1x.current; } 
	 EOF 
;

// Rule Kardinalitaet1x
ruleKardinalitaet1x returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='=>' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKardinalitaet1xAccess().getEqualsSignGreaterThanSignKeyword_0_0());
    }

    |	otherlv_1='(1,*)' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKardinalitaet1xAccess().getLeftParenthesisDigitOneCommaAsteriskRightParenthesisKeyword_0_1());
    }
)(
    {
        $current = forceCreateModelElement(
            grammarAccess.getKardinalitaet1xAccess().getKardinalitaet1xAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAnnotationAccess().getNameParserRuleCall_0()); 
    }
    this_Name_0=ruleName
    { 
        $current = $this_Name_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnnotationAccess().getIgnoreParserRuleCall_1()); 
    }
    this_Ignore_1=ruleIgnore
    { 
        $current = $this_Ignore_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnnotationAccess().getMergeParserRuleCall_2()); 
    }
    this_Merge_2=ruleMerge
    { 
        $current = $this_Merge_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnnotationAccess().getVersionParserRuleCall_3()); 
    }
    this_Version_3=ruleVersion
    { 
        $current = $this_Version_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;

// Rule Name
ruleName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNameAccess().getNameKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNameAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleMerge
entryRuleMerge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMergeRule()); }
	 iv_ruleMerge=ruleMerge 
	 { $current=$iv_ruleMerge.current; } 
	 EOF 
;

// Rule Merge
ruleMerge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@merge' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMergeAccess().getMergeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMergeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMergeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleIgnore
entryRuleIgnore returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIgnoreRule()); }
	 iv_ruleIgnore=ruleIgnore 
	 { $current=$iv_ruleIgnore.current; } 
	 EOF 
;

// Rule Ignore
ruleIgnore returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@ignore' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIgnoreAccess().getIgnoreKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getIgnoreAccess().getIgnoreAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
    }
(
(
		lv_version_1_0=RULE_VERSION_NUMBER
		{
			newLeafNode(lv_version_1_0, grammarAccess.getVersionAccess().getVersionVERSION_NUMBERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_1_0, 
        		"VERSION_NUMBER");
	    }

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'<'|'>') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'<'|'>')*;

RULE_VERSION_NUMBER : ('0'..'9')+ '.' ('0'..'9')+;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


