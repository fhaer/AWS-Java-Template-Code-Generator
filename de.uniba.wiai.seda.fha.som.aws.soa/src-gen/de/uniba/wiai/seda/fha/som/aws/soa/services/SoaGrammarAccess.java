/*
* generated by Xtext
*/
package de.uniba.wiai.seda.fha.som.aws.soa.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import de.uniba.wiai.seda.fha.som.aws.services.AwsGrammarAccess;
import de.uniba.wiai.seda.fha.annotation.services.AnnotationGrammarAccess;

@Singleton
public class SoaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SOA_AwSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SOA_AwS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSOAAwSKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVersionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVersionVERSION_NUMBERTerminalRuleCall_2_1_0 = (RuleCall)cVersionAssignment_2_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cVosAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cVosVOSParserRuleCall_3_0_0 = (RuleCall)cVosAssignment_3_0.eContents().get(0);
		private final Assignment cKosAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cKosKOSParserRuleCall_3_1_0 = (RuleCall)cKosAssignment_3_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cVorgangsservicesAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cVorgangsservicesVorgangsserviceParserRuleCall_4_0_0 = (RuleCall)cVorgangsservicesAssignment_4_0.eContents().get(0);
		private final Assignment cEntityservicesAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cEntityservicesEntityserviceParserRuleCall_4_1_0 = (RuleCall)cEntityservicesAssignment_4_1.eContents().get(0);
		
		//SOA_AwS:
		//
		//	"SOA-AwS:" name=ID ("v" version=VERSION_NUMBER)? (vos=VOS & kos=KOS) (vorgangsservices+=Vorgangsservice |
		//
		//	entityservices+=Entityservice)*;
		public ParserRule getRule() { return rule; }

		//"SOA-AwS:" name=ID ("v" version=VERSION_NUMBER)? (vos=VOS & kos=KOS) (vorgangsservices+=Vorgangsservice |
		//
		//entityservices+=Entityservice)*
		public Group getGroup() { return cGroup; }

		//"SOA-AwS:"
		public Keyword getSOAAwSKeyword_0() { return cSOAAwSKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("v" version=VERSION_NUMBER)?
		public Group getGroup_2() { return cGroup_2; }

		//"v"
		public Keyword getVKeyword_2_0() { return cVKeyword_2_0; }

		//version=VERSION_NUMBER
		public Assignment getVersionAssignment_2_1() { return cVersionAssignment_2_1; }

		//VERSION_NUMBER
		public RuleCall getVersionVERSION_NUMBERTerminalRuleCall_2_1_0() { return cVersionVERSION_NUMBERTerminalRuleCall_2_1_0; }

		//vos=VOS & kos=KOS
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//vos=VOS
		public Assignment getVosAssignment_3_0() { return cVosAssignment_3_0; }

		//VOS
		public RuleCall getVosVOSParserRuleCall_3_0_0() { return cVosVOSParserRuleCall_3_0_0; }

		//kos=KOS
		public Assignment getKosAssignment_3_1() { return cKosAssignment_3_1; }

		//KOS
		public RuleCall getKosKOSParserRuleCall_3_1_0() { return cKosKOSParserRuleCall_3_1_0; }

		//(vorgangsservices+=Vorgangsservice | entityservices+=Entityservice)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//vorgangsservices+=Vorgangsservice
		public Assignment getVorgangsservicesAssignment_4_0() { return cVorgangsservicesAssignment_4_0; }

		//Vorgangsservice
		public RuleCall getVorgangsservicesVorgangsserviceParserRuleCall_4_0_0() { return cVorgangsservicesVorgangsserviceParserRuleCall_4_0_0; }

		//entityservices+=Entityservice
		public Assignment getEntityservicesAssignment_4_1() { return cEntityservicesAssignment_4_1; }

		//Entityservice
		public RuleCall getEntityservicesEntityserviceParserRuleCall_4_1_0() { return cEntityservicesEntityserviceParserRuleCall_4_1_0; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVorgangsserviceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityserviceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cVorgangsserviceElementarParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Service:
		//
		//	Vorgangsservice | Entityservice | VorgangsserviceElementar;
		public ParserRule getRule() { return rule; }

		//Vorgangsservice | Entityservice | VorgangsserviceElementar
		public Alternatives getAlternatives() { return cAlternatives; }

		//Vorgangsservice
		public RuleCall getVorgangsserviceParserRuleCall_0() { return cVorgangsserviceParserRuleCall_0; }

		//Entityservice
		public RuleCall getEntityserviceParserRuleCall_1() { return cEntityserviceParserRuleCall_1; }

		//VorgangsserviceElementar
		public RuleCall getVorgangsserviceElementarParserRuleCall_2() { return cVorgangsserviceElementarParserRuleCall_2; }
	}

	public class VorgangsserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Vorgangsservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVorgangsserviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cChoreographieIFAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cChoreographieIFInterfaceParserRuleCall_3_0 = (RuleCall)cChoreographieIFAssignment_3.eContents().get(0);
		private final Assignment cVorgangsservicesElementarAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVorgangsservicesElementarVorgangsserviceElementarParserRuleCall_4_0 = (RuleCall)cVorgangsservicesElementarAssignment_4.eContents().get(0);
		private final Assignment cWorkflowAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWorkflowWorkflowParserRuleCall_5_0 = (RuleCall)cWorkflowAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Vorgangsservice:
		//
		//	"Vorgangsservice" name=ID "{" choreographieIF=Interface vorgangsservicesElementar+=VorgangsserviceElementar*
		//
		//	workflow=Workflow "}";
		public ParserRule getRule() { return rule; }

		//"Vorgangsservice" name=ID "{" choreographieIF=Interface vorgangsservicesElementar+=VorgangsserviceElementar*
		//
		//workflow=Workflow "}"
		public Group getGroup() { return cGroup; }

		//"Vorgangsservice"
		public Keyword getVorgangsserviceKeyword_0() { return cVorgangsserviceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//choreographieIF=Interface
		public Assignment getChoreographieIFAssignment_3() { return cChoreographieIFAssignment_3; }

		//Interface
		public RuleCall getChoreographieIFInterfaceParserRuleCall_3_0() { return cChoreographieIFInterfaceParserRuleCall_3_0; }

		//vorgangsservicesElementar+=VorgangsserviceElementar*
		public Assignment getVorgangsservicesElementarAssignment_4() { return cVorgangsservicesElementarAssignment_4; }

		//VorgangsserviceElementar
		public RuleCall getVorgangsservicesElementarVorgangsserviceElementarParserRuleCall_4_0() { return cVorgangsservicesElementarVorgangsserviceElementarParserRuleCall_4_0; }

		//workflow=Workflow
		public Assignment getWorkflowAssignment_5() { return cWorkflowAssignment_5; }

		//Workflow
		public RuleCall getWorkflowWorkflowParserRuleCall_5_0() { return cWorkflowWorkflowParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class VorgangsserviceElementarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VorgangsserviceElementar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cVOTKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKomponentenObjekttypAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cKomponentenObjekttypVOTCrossReference_2_0 = (CrossReference)cKomponentenObjekttypAssignment_2.eContents().get(0);
		private final RuleCall cKomponentenObjekttypVOTIDTerminalRuleCall_2_0_1 = (RuleCall)cKomponentenObjekttypVOTCrossReference_2_0.eContents().get(1);
		private final Assignment cInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInterfaceInterfaceParserRuleCall_3_0 = (RuleCall)cInterfaceAssignment_3.eContents().get(0);
		
		//VorgangsserviceElementar:
		//
		//	name=ID "VOT" komponentenObjekttyp=[aws::VOT] interface=Interface;
		public ParserRule getRule() { return rule; }

		//name=ID "VOT" komponentenObjekttyp=[aws::VOT] interface=Interface
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"VOT"
		public Keyword getVOTKeyword_1() { return cVOTKeyword_1; }

		//komponentenObjekttyp=[aws::VOT]
		public Assignment getKomponentenObjekttypAssignment_2() { return cKomponentenObjekttypAssignment_2; }

		//[aws::VOT]
		public CrossReference getKomponentenObjekttypVOTCrossReference_2_0() { return cKomponentenObjekttypVOTCrossReference_2_0; }

		//ID
		public RuleCall getKomponentenObjekttypVOTIDTerminalRuleCall_2_0_1() { return cKomponentenObjekttypVOTIDTerminalRuleCall_2_0_1; }

		//interface=Interface
		public Assignment getInterfaceAssignment_3() { return cInterfaceAssignment_3; }

		//Interface
		public RuleCall getInterfaceInterfaceParserRuleCall_3_0() { return cInterfaceInterfaceParserRuleCall_3_0; }
	}

	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameInterfaceKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMethodenAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMethodenServiceMethodeParserRuleCall_2_0 = (RuleCall)cMethodenAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Interface:
		//
		//	name="Interface" "{" methoden+=ServiceMethode+ "}";
		public ParserRule getRule() { return rule; }

		//name="Interface" "{" methoden+=ServiceMethode+ "}"
		public Group getGroup() { return cGroup; }

		//name="Interface"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"Interface"
		public Keyword getNameInterfaceKeyword_0_0() { return cNameInterfaceKeyword_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//methoden+=ServiceMethode+
		public Assignment getMethodenAssignment_2() { return cMethodenAssignment_2; }

		//ServiceMethode
		public RuleCall getMethodenServiceMethodeParserRuleCall_2_0() { return cMethodenServiceMethodeParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ServiceMethodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceMethode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParameterIDTerminalRuleCall_2_0 = (RuleCall)cParameterAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ServiceMethode:
		//
		//	name=ID "(" parameter+=ID* ");";
		public ParserRule getRule() { return rule; }

		//name=ID "(" parameter+=ID* ");"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//parameter+=ID*
		public Assignment getParameterAssignment_2() { return cParameterAssignment_2; }

		//ID
		public RuleCall getParameterIDTerminalRuleCall_2_0() { return cParameterIDTerminalRuleCall_2_0; }

		//");"
		public Keyword getRightParenthesisSemicolonKeyword_3() { return cRightParenthesisSemicolonKeyword_3; }
	}

	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkflowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cOrchestrierungAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cOrchestrierungOrchestrierungParserRuleCall_2_0_0 = (RuleCall)cOrchestrierungAssignment_2_0.eContents().get(0);
		private final Assignment cChoreographieAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cChoreographieChoreographieLokalParserRuleCall_2_1_0 = (RuleCall)cChoreographieAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Workflow:
		//
		//	"Workflow" "{" (orchestrierung+=Orchestrierung | choreographie+=ChoreographieLokal)+ "}";
		public ParserRule getRule() { return rule; }

		//"Workflow" "{" (orchestrierung+=Orchestrierung | choreographie+=ChoreographieLokal)+ "}"
		public Group getGroup() { return cGroup; }

		//"Workflow"
		public Keyword getWorkflowKeyword_0() { return cWorkflowKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(orchestrierung+=Orchestrierung | choreographie+=ChoreographieLokal)+
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//orchestrierung+=Orchestrierung
		public Assignment getOrchestrierungAssignment_2_0() { return cOrchestrierungAssignment_2_0; }

		//Orchestrierung
		public RuleCall getOrchestrierungOrchestrierungParserRuleCall_2_0_0() { return cOrchestrierungOrchestrierungParserRuleCall_2_0_0; }

		//choreographie+=ChoreographieLokal
		public Assignment getChoreographieAssignment_2_1() { return cChoreographieAssignment_2_1; }

		//ChoreographieLokal
		public RuleCall getChoreographieChoreographieLokalParserRuleCall_2_1_0() { return cChoreographieChoreographieLokalParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class OrchestrierungElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Orchestrierung");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cBedingungAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cBedingungBedingungParserRuleCall_0_1_0 = (RuleCall)cBedingungAssignment_0_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cMethode1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMethode1ServiceMethodeCrossReference_1_0 = (CrossReference)cMethode1Assignment_1.eContents().get(0);
		private final RuleCall cMethode1ServiceMethodeIDTerminalRuleCall_1_0_1 = (RuleCall)cMethode1ServiceMethodeCrossReference_1_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMethode2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cMethode2ServiceMethodeCrossReference_3_0 = (CrossReference)cMethode2Assignment_3.eContents().get(0);
		private final RuleCall cMethode2ServiceMethodeIDTerminalRuleCall_3_0_1 = (RuleCall)cMethode2ServiceMethodeCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Orchestrierung:
		//
		//	("(" bedingung=Bedingung ")")? methode1=[ServiceMethode] "->" methode2=[ServiceMethode] ";";
		public ParserRule getRule() { return rule; }

		//("(" bedingung=Bedingung ")")? methode1=[ServiceMethode] "->" methode2=[ServiceMethode] ";"
		public Group getGroup() { return cGroup; }

		//("(" bedingung=Bedingung ")")?
		public Group getGroup_0() { return cGroup_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }

		//bedingung=Bedingung
		public Assignment getBedingungAssignment_0_1() { return cBedingungAssignment_0_1; }

		//Bedingung
		public RuleCall getBedingungBedingungParserRuleCall_0_1_0() { return cBedingungBedingungParserRuleCall_0_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_2() { return cRightParenthesisKeyword_0_2; }

		//methode1=[ServiceMethode]
		public Assignment getMethode1Assignment_1() { return cMethode1Assignment_1; }

		//[ServiceMethode]
		public CrossReference getMethode1ServiceMethodeCrossReference_1_0() { return cMethode1ServiceMethodeCrossReference_1_0; }

		//ID
		public RuleCall getMethode1ServiceMethodeIDTerminalRuleCall_1_0_1() { return cMethode1ServiceMethodeIDTerminalRuleCall_1_0_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//methode2=[ServiceMethode]
		public Assignment getMethode2Assignment_3() { return cMethode2Assignment_3; }

		//[ServiceMethode]
		public CrossReference getMethode2ServiceMethodeCrossReference_3_0() { return cMethode2ServiceMethodeCrossReference_3_0; }

		//ID
		public RuleCall getMethode2ServiceMethodeIDTerminalRuleCall_3_0_1() { return cMethode2ServiceMethodeIDTerminalRuleCall_3_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ChoreographieLokalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChoreographieLokal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cBedingungAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cBedingungBedingungParserRuleCall_0_1_0 = (RuleCall)cBedingungAssignment_0_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cMethode1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cMethode1ServiceMethodeCrossReference_1_0 = (CrossReference)cMethode1Assignment_1.eContents().get(0);
		private final RuleCall cMethode1ServiceMethodeIDTerminalRuleCall_1_0_1 = (RuleCall)cMethode1ServiceMethodeCrossReference_1_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cService2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cService2ServiceCrossReference_3_0 = (CrossReference)cService2Assignment_3.eContents().get(0);
		private final RuleCall cService2ServiceIDTerminalRuleCall_3_0_1 = (RuleCall)cService2ServiceCrossReference_3_0.eContents().get(1);
		private final Keyword cFullStopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMethode2Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cMethode2ServiceMethodeCrossReference_5_0 = (CrossReference)cMethode2Assignment_5.eContents().get(0);
		private final RuleCall cMethode2ServiceMethodeIDTerminalRuleCall_5_0_1 = (RuleCall)cMethode2ServiceMethodeCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ChoreographieLokal:
		//
		//	("(" bedingung=Bedingung ")")? methode1=[ServiceMethode] "->" service2=[Service] "." methode2=[ServiceMethode] ";";
		public ParserRule getRule() { return rule; }

		//("(" bedingung=Bedingung ")")? methode1=[ServiceMethode] "->" service2=[Service] "." methode2=[ServiceMethode] ";"
		public Group getGroup() { return cGroup; }

		//("(" bedingung=Bedingung ")")?
		public Group getGroup_0() { return cGroup_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }

		//bedingung=Bedingung
		public Assignment getBedingungAssignment_0_1() { return cBedingungAssignment_0_1; }

		//Bedingung
		public RuleCall getBedingungBedingungParserRuleCall_0_1_0() { return cBedingungBedingungParserRuleCall_0_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_2() { return cRightParenthesisKeyword_0_2; }

		//methode1=[ServiceMethode]
		public Assignment getMethode1Assignment_1() { return cMethode1Assignment_1; }

		//[ServiceMethode]
		public CrossReference getMethode1ServiceMethodeCrossReference_1_0() { return cMethode1ServiceMethodeCrossReference_1_0; }

		//ID
		public RuleCall getMethode1ServiceMethodeIDTerminalRuleCall_1_0_1() { return cMethode1ServiceMethodeIDTerminalRuleCall_1_0_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//service2=[Service]
		public Assignment getService2Assignment_3() { return cService2Assignment_3; }

		//[Service]
		public CrossReference getService2ServiceCrossReference_3_0() { return cService2ServiceCrossReference_3_0; }

		//ID
		public RuleCall getService2ServiceIDTerminalRuleCall_3_0_1() { return cService2ServiceIDTerminalRuleCall_3_0_1; }

		//"."
		public Keyword getFullStopKeyword_4() { return cFullStopKeyword_4; }

		//methode2=[ServiceMethode]
		public Assignment getMethode2Assignment_5() { return cMethode2Assignment_5; }

		//[ServiceMethode]
		public CrossReference getMethode2ServiceMethodeCrossReference_5_0() { return cMethode2ServiceMethodeCrossReference_5_0; }

		//ID
		public RuleCall getMethode2ServiceMethodeIDTerminalRuleCall_5_0_1() { return cMethode2ServiceMethodeIDTerminalRuleCall_5_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class BedingungElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Bedingung");
		private final Assignment cBedingungAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBedingungIDTerminalRuleCall_0 = (RuleCall)cBedingungAssignment.eContents().get(0);
		
		//Bedingung:
		//
		//	bedingung=ID;
		public ParserRule getRule() { return rule; }

		//bedingung=ID
		public Assignment getBedingungAssignment() { return cBedingungAssignment; }

		//ID
		public RuleCall getBedingungIDTerminalRuleCall_0() { return cBedingungIDTerminalRuleCall_0; }
	}

	public class EntityserviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entityservice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityserviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInterfaceInterfaceParserRuleCall_3_0 = (RuleCall)cInterfaceAssignment_3.eContents().get(0);
		private final Assignment cEntitiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEntitiesEntityParserRuleCall_4_0 = (RuleCall)cEntitiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entityservice:
		//
		//	"Entityservice" name=ID "{" interface=Interface entities+=Entity* "}";
		public ParserRule getRule() { return rule; }

		//"Entityservice" name=ID "{" interface=Interface entities+=Entity* "}"
		public Group getGroup() { return cGroup; }

		//"Entityservice"
		public Keyword getEntityserviceKeyword_0() { return cEntityserviceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//interface=Interface
		public Assignment getInterfaceAssignment_3() { return cInterfaceAssignment_3; }

		//Interface
		public RuleCall getInterfaceInterfaceParserRuleCall_3_0() { return cInterfaceInterfaceParserRuleCall_3_0; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_4() { return cEntitiesAssignment_4; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_4_0() { return cEntitiesEntityParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cKOTKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKomponentenObjekttypAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cKomponentenObjekttypKOTCrossReference_2_0 = (CrossReference)cKomponentenObjekttypAssignment_2.eContents().get(0);
		private final RuleCall cKomponentenObjekttypKOTIDTerminalRuleCall_2_0_1 = (RuleCall)cKomponentenObjekttypKOTCrossReference_2_0.eContents().get(1);
		private final Assignment cInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInterfaceInterfaceParserRuleCall_3_0 = (RuleCall)cInterfaceAssignment_3.eContents().get(0);
		
		//Entity:
		//
		//	name=ID "KOT" komponentenObjekttyp=[aws::KOT] interface=Interface?;
		public ParserRule getRule() { return rule; }

		//name=ID "KOT" komponentenObjekttyp=[aws::KOT] interface=Interface?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"KOT"
		public Keyword getKOTKeyword_1() { return cKOTKeyword_1; }

		//komponentenObjekttyp=[aws::KOT]
		public Assignment getKomponentenObjekttypAssignment_2() { return cKomponentenObjekttypAssignment_2; }

		//[aws::KOT]
		public CrossReference getKomponentenObjekttypKOTCrossReference_2_0() { return cKomponentenObjekttypKOTCrossReference_2_0; }

		//ID
		public RuleCall getKomponentenObjekttypKOTIDTerminalRuleCall_2_0_1() { return cKomponentenObjekttypKOTIDTerminalRuleCall_2_0_1; }

		//interface=Interface?
		public Assignment getInterfaceAssignment_3() { return cInterfaceAssignment_3; }

		//Interface
		public RuleCall getInterfaceInterfaceParserRuleCall_3_0() { return cInterfaceInterfaceParserRuleCall_3_0; }
	}
	
	
	private SOA_AwSElements pSOA_AwS;
	private ServiceElements pService;
	private VorgangsserviceElements pVorgangsservice;
	private VorgangsserviceElementarElements pVorgangsserviceElementar;
	private InterfaceElements pInterface;
	private ServiceMethodeElements pServiceMethode;
	private WorkflowElements pWorkflow;
	private OrchestrierungElements pOrchestrierung;
	private ChoreographieLokalElements pChoreographieLokal;
	private BedingungElements pBedingung;
	private EntityserviceElements pEntityservice;
	private EntityElements pEntity;
	
	private final Grammar grammar;

	private AwsGrammarAccess gaAws;

	@Inject
	public SoaGrammarAccess(GrammarProvider grammarProvider,
		AwsGrammarAccess gaAws) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaAws = gaAws;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.uniba.wiai.seda.fha.som.aws.soa.Soa".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public AwsGrammarAccess getAwsGrammarAccess() {
		return gaAws;
	}

	
	//SOA_AwS:
	//
	//	"SOA-AwS:" name=ID ("v" version=VERSION_NUMBER)? (vos=VOS & kos=KOS) (vorgangsservices+=Vorgangsservice |
	//
	//	entityservices+=Entityservice)*;
	public SOA_AwSElements getSOA_AwSAccess() {
		return (pSOA_AwS != null) ? pSOA_AwS : (pSOA_AwS = new SOA_AwSElements());
	}
	
	public ParserRule getSOA_AwSRule() {
		return getSOA_AwSAccess().getRule();
	}

	//Service:
	//
	//	Vorgangsservice | Entityservice | VorgangsserviceElementar;
	public ServiceElements getServiceAccess() {
		return (pService != null) ? pService : (pService = new ServiceElements());
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//Vorgangsservice:
	//
	//	"Vorgangsservice" name=ID "{" choreographieIF=Interface vorgangsservicesElementar+=VorgangsserviceElementar*
	//
	//	workflow=Workflow "}";
	public VorgangsserviceElements getVorgangsserviceAccess() {
		return (pVorgangsservice != null) ? pVorgangsservice : (pVorgangsservice = new VorgangsserviceElements());
	}
	
	public ParserRule getVorgangsserviceRule() {
		return getVorgangsserviceAccess().getRule();
	}

	//VorgangsserviceElementar:
	//
	//	name=ID "VOT" komponentenObjekttyp=[aws::VOT] interface=Interface;
	public VorgangsserviceElementarElements getVorgangsserviceElementarAccess() {
		return (pVorgangsserviceElementar != null) ? pVorgangsserviceElementar : (pVorgangsserviceElementar = new VorgangsserviceElementarElements());
	}
	
	public ParserRule getVorgangsserviceElementarRule() {
		return getVorgangsserviceElementarAccess().getRule();
	}

	//Interface:
	//
	//	name="Interface" "{" methoden+=ServiceMethode+ "}";
	public InterfaceElements getInterfaceAccess() {
		return (pInterface != null) ? pInterface : (pInterface = new InterfaceElements());
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}

	//ServiceMethode:
	//
	//	name=ID "(" parameter+=ID* ");";
	public ServiceMethodeElements getServiceMethodeAccess() {
		return (pServiceMethode != null) ? pServiceMethode : (pServiceMethode = new ServiceMethodeElements());
	}
	
	public ParserRule getServiceMethodeRule() {
		return getServiceMethodeAccess().getRule();
	}

	//Workflow:
	//
	//	"Workflow" "{" (orchestrierung+=Orchestrierung | choreographie+=ChoreographieLokal)+ "}";
	public WorkflowElements getWorkflowAccess() {
		return (pWorkflow != null) ? pWorkflow : (pWorkflow = new WorkflowElements());
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}

	//Orchestrierung:
	//
	//	("(" bedingung=Bedingung ")")? methode1=[ServiceMethode] "->" methode2=[ServiceMethode] ";";
	public OrchestrierungElements getOrchestrierungAccess() {
		return (pOrchestrierung != null) ? pOrchestrierung : (pOrchestrierung = new OrchestrierungElements());
	}
	
	public ParserRule getOrchestrierungRule() {
		return getOrchestrierungAccess().getRule();
	}

	//ChoreographieLokal:
	//
	//	("(" bedingung=Bedingung ")")? methode1=[ServiceMethode] "->" service2=[Service] "." methode2=[ServiceMethode] ";";
	public ChoreographieLokalElements getChoreographieLokalAccess() {
		return (pChoreographieLokal != null) ? pChoreographieLokal : (pChoreographieLokal = new ChoreographieLokalElements());
	}
	
	public ParserRule getChoreographieLokalRule() {
		return getChoreographieLokalAccess().getRule();
	}

	//Bedingung:
	//
	//	bedingung=ID;
	public BedingungElements getBedingungAccess() {
		return (pBedingung != null) ? pBedingung : (pBedingung = new BedingungElements());
	}
	
	public ParserRule getBedingungRule() {
		return getBedingungAccess().getRule();
	}

	//Entityservice:
	//
	//	"Entityservice" name=ID "{" interface=Interface entities+=Entity* "}";
	public EntityserviceElements getEntityserviceAccess() {
		return (pEntityservice != null) ? pEntityservice : (pEntityservice = new EntityserviceElements());
	}
	
	public ParserRule getEntityserviceRule() {
		return getEntityserviceAccess().getRule();
	}

	//Entity:
	//
	//	name=ID "KOT" komponentenObjekttyp=[aws::KOT] interface=Interface?;
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//AwS:
	//
	//	"AwS:" name=ID ("v" version=VERSION_NUMBER)? (kos=KOS & vos=VOS);
	public AwsGrammarAccess.AwSElements getAwSAccess() {
		return gaAws.getAwSAccess();
	}
	
	public ParserRule getAwSRule() {
		return getAwSAccess().getRule();
	}

	//Schema:
	//
	//	VOS | KOS;
	public AwsGrammarAccess.SchemaElements getSchemaAccess() {
		return gaAws.getSchemaAccess();
	}
	
	public ParserRule getSchemaRule() {
		return getSchemaAccess().getRule();
	}

	//VOS:
	//
	//	(name="VOS" | name=ID) "{" (objekttypen+=VOT | beziehungen+=Interacts_with | gliederung+=VOS)+ "}";
	public AwsGrammarAccess.VOSElements getVOSAccess() {
		return gaAws.getVOSAccess();
	}
	
	public ParserRule getVOSRule() {
		return getVOSAccess().getRule();
	}

	//KOS:
	//
	//	(name="KOS" | name=ID) "{" (objekttypen+=KOT | beziehungen+=Beziehung | gliederung+=KOS)+ "}";
	public AwsGrammarAccess.KOSElements getKOSAccess() {
		return gaAws.getKOSAccess();
	}
	
	public ParserRule getKOSRule() {
		return getKOSAccess().getRule();
	}

	//Objekttyp:
	//
	//	VOT | KOT;
	public AwsGrammarAccess.ObjekttypElements getObjekttypAccess() {
		return gaAws.getObjekttypAccess();
	}
	
	public ParserRule getObjekttypRule() {
		return getObjekttypAccess().getRule();
	}

	//VOT:
	//
	//	annotation=Annotation? "VOT" name=ID "{" (attribute+=Attribut | operatoren+=Operator)* "}";
	public AwsGrammarAccess.VOTElements getVOTAccess() {
		return gaAws.getVOTAccess();
	}
	
	public ParserRule getVOTRule() {
		return getVOTAccess().getRule();
	}

	//KOT:
	//
	//	OOT | LOT | TOT;
	public AwsGrammarAccess.KOTElements getKOTAccess() {
		return gaAws.getKOTAccess();
	}
	
	public ParserRule getKOTRule() {
		return getKOTAccess().getRule();
	}

	//OOT:
	//
	//	annotation=Annotation? "OOT" name=ID "{" (attribute+=Attribut | operatoren+=Operator)* "}";
	public AwsGrammarAccess.OOTElements getOOTAccess() {
		return gaAws.getOOTAccess();
	}
	
	public ParserRule getOOTRule() {
		return getOOTAccess().getRule();
	}

	//LOT:
	//
	//	annotation=Annotation? "LOT" name=ID "{" (attribute+=Attribut | operatoren+=Operator)* "}";
	public AwsGrammarAccess.LOTElements getLOTAccess() {
		return gaAws.getLOTAccess();
	}
	
	public ParserRule getLOTRule() {
		return getLOTAccess().getRule();
	}

	//TOT:
	//
	//	annotation=Annotation? "TOT" name=ID "{" (attribute+=Attribut | operatoren+=Operator)* "}";
	public AwsGrammarAccess.TOTElements getTOTAccess() {
		return gaAws.getTOTAccess();
	}
	
	public ParserRule getTOTRule() {
		return getTOTAccess().getRule();
	}

	//Attribut:
	//
	//	typ=[Objekttyp]? name=ID ";";
	public AwsGrammarAccess.AttributElements getAttributAccess() {
		return gaAws.getAttributAccess();
	}
	
	public ParserRule getAttributRule() {
		return getAttributAccess().getRule();
	}

	//Operator:
	//
	//	name=ID "(" parameter+=[Objekttyp]* ")" ";";
	public AwsGrammarAccess.OperatorElements getOperatorAccess() {
		return gaAws.getOperatorAccess();
	}
	
	public ParserRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}

	//Beziehung:
	//
	//	Interacts_with | Is_a | Is_part_of;
	public AwsGrammarAccess.BeziehungElements getBeziehungAccess() {
		return gaAws.getBeziehungAccess();
	}
	
	public ParserRule getBeziehungRule() {
		return getBeziehungAccess().getRule();
	}

	//Interacts_with:
	//
	//	annotation=Annotation? "interacts_with:"? objekttyp1=[Objekttyp] kardinalitaet=(Kardinalitaet01 | Kardinalitaet0x |
	//
	//	Kardinalitaet1x) objekttyp2=[Objekttyp] ";";
	public AwsGrammarAccess.Interacts_withElements getInteracts_withAccess() {
		return gaAws.getInteracts_withAccess();
	}
	
	public ParserRule getInteracts_withRule() {
		return getInteracts_withAccess().getRule();
	}

	//Is_a:
	//
	//	annotation=Annotation? "is_a:" objekttyp1=[Objekttyp] kardinalitaet=(Kardinalitaet01 | Kardinalitaet11)
	//
	//	objekttyp2=[Objekttyp] ";";
	public AwsGrammarAccess.Is_aElements getIs_aAccess() {
		return gaAws.getIs_aAccess();
	}
	
	public ParserRule getIs_aRule() {
		return getIs_aAccess().getRule();
	}

	//Is_part_of:
	//
	//	annotation=Annotation? "is_part_of:" objekttyp1=[Objekttyp] kardinalitaet=(Kardinalitaet01 | Kardinalitaet0x |
	//
	//	Kardinalitaet1x) objekttyp2=[Objekttyp] ";";
	public AwsGrammarAccess.Is_part_ofElements getIs_part_ofAccess() {
		return gaAws.getIs_part_ofAccess();
	}
	
	public ParserRule getIs_part_ofRule() {
		return getIs_part_ofAccess().getRule();
	}

	//Kardinalitaet:
	//
	//	Kardinalitaet01 | Kardinalitaet0x | Kardinalitaet11 | Kardinalitaet1x;
	public AwsGrammarAccess.KardinalitaetElements getKardinalitaetAccess() {
		return gaAws.getKardinalitaetAccess();
	}
	
	public ParserRule getKardinalitaetRule() {
		return getKardinalitaetAccess().getRule();
	}

	//Kardinalitaet01:
	//
	//	("--" | "(0,1)") {Kardinalitaet01};
	public AwsGrammarAccess.Kardinalitaet01Elements getKardinalitaet01Access() {
		return gaAws.getKardinalitaet01Access();
	}
	
	public ParserRule getKardinalitaet01Rule() {
		return getKardinalitaet01Access().getRule();
	}

	//Kardinalitaet0x:
	//
	//	("->" | "(0,*)") {Kardinalitaet0x};
	public AwsGrammarAccess.Kardinalitaet0xElements getKardinalitaet0xAccess() {
		return gaAws.getKardinalitaet0xAccess();
	}
	
	public ParserRule getKardinalitaet0xRule() {
		return getKardinalitaet0xAccess().getRule();
	}

	//Kardinalitaet11:
	//
	//	("==" | "(1,1)") {Kardinalitaet11};
	public AwsGrammarAccess.Kardinalitaet11Elements getKardinalitaet11Access() {
		return gaAws.getKardinalitaet11Access();
	}
	
	public ParserRule getKardinalitaet11Rule() {
		return getKardinalitaet11Access().getRule();
	}

	//Kardinalitaet1x:
	//
	//	("=>" | "(1,*)") {Kardinalitaet1x};
	public AwsGrammarAccess.Kardinalitaet1xElements getKardinalitaet1xAccess() {
		return gaAws.getKardinalitaet1xAccess();
	}
	
	public ParserRule getKardinalitaet1xRule() {
		return getKardinalitaet1xAccess().getRule();
	}

	//Annotation:
	//
	//	Name | Ignore | Merge | Version;
	public AnnotationGrammarAccess.AnnotationElements getAnnotationAccess() {
		return gaAws.getAnnotationAccess();
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//Name:
	//
	//	"@name" name=ID;
	public AnnotationGrammarAccess.NameElements getNameAccess() {
		return gaAws.getNameAccess();
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}

	//Merge:
	//
	//	"@merge" name=ID;
	public AnnotationGrammarAccess.MergeElements getMergeAccess() {
		return gaAws.getMergeAccess();
	}
	
	public ParserRule getMergeRule() {
		return getMergeAccess().getRule();
	}

	//Ignore:
	//
	//	"@ignore" {Ignore};
	public AnnotationGrammarAccess.IgnoreElements getIgnoreAccess() {
		return gaAws.getIgnoreAccess();
	}
	
	public ParserRule getIgnoreRule() {
		return getIgnoreAccess().getRule();
	}

	//Version:
	//
	//	"@version" version=VERSION_NUMBER;
	public AnnotationGrammarAccess.VersionElements getVersionAccess() {
		return gaAws.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_" | "<" | ">") ("a".."z" | "A".."Z" | "_" | "0".."9" | "<" | ">")*;
	public TerminalRule getIDRule() {
		return gaAws.getIDRule();
	} 

	//terminal VERSION_NUMBER:
	//
	//	"0".."9"+ "." "0".."9"+;
	public TerminalRule getVERSION_NUMBERRule() {
		return gaAws.getVERSION_NUMBERRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaAws.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaAws.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaAws.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaAws.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaAws.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaAws.getANY_OTHERRule();
	} 
}
