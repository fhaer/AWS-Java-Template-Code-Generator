/*
* generated by Xtext
*/
grammar InternalSwarchitektur;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.uniba.wiai.seda.fha.swarchitektur.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.uniba.wiai.seda.fha.swarchitektur.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.uniba.wiai.seda.fha.swarchitektur.services.SwarchitekturGrammarAccess;

}

@parser::members {

 	private SwarchitekturGrammarAccess grammarAccess;
 	
    public InternalSwarchitekturParser(TokenStream input, SwarchitekturGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Architektur";	
   	}
   	
   	@Override
   	protected SwarchitekturGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleArchitektur
entryRuleArchitektur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArchitekturRule()); }
	 iv_ruleArchitektur=ruleArchitektur 
	 { $current=$iv_ruleArchitektur.current; } 
	 EOF 
;

// Rule Architektur
ruleArchitektur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='JavaEEArchitektur:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArchitekturAccess().getJavaEEArchitekturKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getArchitekturAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArchitekturRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='v' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArchitekturAccess().getVKeyword_2_0());
    }
(
(
		lv_version_3_0=RULE_ID
		{
			newLeafNode(lv_version_3_0, grammarAccess.getArchitekturAccess().getVersionIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArchitekturRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_3_0, 
        		"ID");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getArchitekturAccess().getPaketePackageParserRuleCall_3_0()); 
	    }
		lv_pakete_4_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArchitekturRule());
	        }
       		add(
       			$current, 
       			"pakete",
        		lv_pakete_4_0, 
        		"Package");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getPackageKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getKomponentenEJBParserRuleCall_3_0_0()); 
	    }
		lv_komponenten_3_0=ruleEJB		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"komponenten",
        		lv_komponenten_3_0, 
        		"EJB");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getEntitiesJPAEntityParserRuleCall_3_1_0()); 
	    }
		lv_entities_4_0=ruleJPAEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_4_0, 
        		"JPAEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getPaketePackageParserRuleCall_3_2_0()); 
	    }
		lv_pakete_5_0=rulePackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"pakete",
        		lv_pakete_5_0, 
        		"Package");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEJB
entryRuleEJB returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEJBRule()); }
	 iv_ruleEJB=ruleEJB 
	 { $current=$iv_ruleEJB.current; } 
	 EOF 
;

// Rule EJB
ruleEJB returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEJBAccess().getSessionBeanParserRuleCall_0()); 
    }
    this_SessionBean_0=ruleSessionBean
    { 
        $current = $this_SessionBean_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEJBAccess().getMessageDrivenBeanParserRuleCall_1()); 
    }
    this_MessageDrivenBean_1=ruleMessageDrivenBean
    { 
        $current = $this_MessageDrivenBean_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getEJBAccess().getBusinessInterfaceParserRuleCall_2()); 
    }
    this_BusinessInterface_2=ruleBusinessInterface
    { 
        $current = $this_BusinessInterface_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSessionBean
entryRuleSessionBean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSessionBeanRule()); }
	 iv_ruleSessionBean=ruleSessionBean 
	 { $current=$iv_ruleSessionBean.current; } 
	 EOF 
;

// Rule SessionBean
ruleSessionBean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSessionBeanAccess().getStatelessSessionBeanParserRuleCall_0()); 
    }
    this_StatelessSessionBean_0=ruleStatelessSessionBean
    { 
        $current = $this_StatelessSessionBean_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSessionBeanAccess().getStatefulSessionBeanParserRuleCall_1()); 
    }
    this_StatefulSessionBean_1=ruleStatefulSessionBean
    { 
        $current = $this_StatefulSessionBean_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSessionBeanAccess().getSingletonSessionBeanParserRuleCall_2()); 
    }
    this_SingletonSessionBean_2=ruleSingletonSessionBean
    { 
        $current = $this_SingletonSessionBean_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBusinessInterface
entryRuleBusinessInterface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBusinessInterfaceRule()); }
	 iv_ruleBusinessInterface=ruleBusinessInterface 
	 { $current=$iv_ruleBusinessInterface.current; } 
	 EOF 
;

// Rule BusinessInterface
ruleBusinessInterface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BusinessInterface' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBusinessInterfaceAccess().getBusinessInterfaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBusinessInterfaceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBusinessInterfaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBusinessInterfaceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessInterfaceAccess().getMethodenMethodensignaturParserRuleCall_3_0()); 
	    }
		lv_methoden_3_0=ruleMethodensignatur		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessInterfaceRule());
	        }
       		add(
       			$current, 
       			"methoden",
        		lv_methoden_3_0, 
        		"Methodensignatur");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBusinessInterfaceAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMethodensignatur
entryRuleMethodensignatur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodensignaturRule()); }
	 iv_ruleMethodensignatur=ruleMethodensignatur 
	 { $current=$iv_ruleMethodensignatur.current; } 
	 EOF 
;

// Rule Methodensignatur
ruleMethodensignatur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMethodensignaturAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodensignaturRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='();' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMethodensignaturAccess().getLeftParenthesisRightParenthesisSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleStatefulSessionBean
entryRuleStatefulSessionBean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatefulSessionBeanRule()); }
	 iv_ruleStatefulSessionBean=ruleStatefulSessionBean 
	 { $current=$iv_ruleStatefulSessionBean.current; } 
	 EOF 
;

// Rule StatefulSessionBean
ruleStatefulSessionBean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StatefulSessionBean' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatefulSessionBeanAccess().getStatefulSessionBeanKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStatefulSessionBeanAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatefulSessionBeanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatefulSessionBeanAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatefulSessionBeanAccess().getAttributeAttributParserRuleCall_3_0()); 
	    }
		lv_attribute_3_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatefulSessionBeanRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_3_0, 
        		"Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStatefulSessionBeanAccess().getMethodeMethodeParserRuleCall_4_0()); 
	    }
		lv_methode_4_0=ruleMethode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatefulSessionBeanRule());
	        }
       		add(
       			$current, 
       			"methode",
        		lv_methode_4_0, 
        		"Methode");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStatefulSessionBeanAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAttribut
entryRuleAttribut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributRule()); }
	 iv_ruleAttribut=ruleAttribut 
	 { $current=$iv_ruleAttribut.current; } 
	 EOF 
;

// Rule Attribut
ruleAttribut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_typ_0_0=RULE_ID
		{
			newLeafNode(lv_typ_0_0, grammarAccess.getAttributAccess().getTypIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typ",
        		lv_typ_0_0, 
        		"ID");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleMethode
entryRuleMethode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodeRule()); }
	 iv_ruleMethode=ruleMethode 
	 { $current=$iv_ruleMethode.current; } 
	 EOF 
;

// Rule Methode
ruleMethode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMethodeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='()' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMethodeAccess().getLeftParenthesisRightParenthesisKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMethodeAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodeAccess().getAufrufAufrufParserRuleCall_3_0()); 
	    }
		lv_aufruf_3_0=ruleAufruf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodeRule());
	        }
       		add(
       			$current, 
       			"aufruf",
        		lv_aufruf_3_0, 
        		"Aufruf");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMethodeAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAufruf
entryRuleAufruf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAufrufRule()); }
	 iv_ruleAufruf=ruleAufruf 
	 { $current=$iv_ruleAufruf.current; } 
	 EOF 
;

// Rule Aufruf
ruleAufruf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_objekt_0_0=RULE_ID
		{
			newLeafNode(lv_objekt_0_0, grammarAccess.getAufrufAccess().getObjektIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAufrufRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"objekt",
        		lv_objekt_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAufrufAccess().getFullStopKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAufrufAccess().getMethodeMethodensignaturParserRuleCall_1_0()); 
	    }
		lv_methode_2_0=ruleMethodensignatur		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAufrufRule());
	        }
       		set(
       			$current, 
       			"methode",
        		lv_methode_2_0, 
        		"Methodensignatur");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStatelessSessionBean
entryRuleStatelessSessionBean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatelessSessionBeanRule()); }
	 iv_ruleStatelessSessionBean=ruleStatelessSessionBean 
	 { $current=$iv_ruleStatelessSessionBean.current; } 
	 EOF 
;

// Rule StatelessSessionBean
ruleStatelessSessionBean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StatelessSessionBean' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatelessSessionBeanAccess().getStatelessSessionBeanKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStatelessSessionBeanAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatelessSessionBeanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatelessSessionBeanAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatelessSessionBeanAccess().getMethodeMethodeParserRuleCall_3_0()); 
	    }
		lv_methode_3_0=ruleMethode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatelessSessionBeanRule());
	        }
       		add(
       			$current, 
       			"methode",
        		lv_methode_3_0, 
        		"Methode");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStatelessSessionBeanAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleJPAEntity
entryRuleJPAEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJPAEntityRule()); }
	 iv_ruleJPAEntity=ruleJPAEntity 
	 { $current=$iv_ruleJPAEntity.current; } 
	 EOF 
;

// Rule JPAEntity
ruleJPAEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='JPAEntity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJPAEntityAccess().getJPAEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJPAEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJPAEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJPAEntityAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJPAEntityAccess().getAttributeAttributParserRuleCall_3_0()); 
	    }
		lv_attribute_3_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJPAEntityRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_3_0, 
        		"Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getJPAEntityAccess().getMethodeMethodeParserRuleCall_4_0()); 
	    }
		lv_methode_4_0=ruleMethode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJPAEntityRule());
	        }
       		add(
       			$current, 
       			"methode",
        		lv_methode_4_0, 
        		"Methode");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJPAEntityAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleMessageDrivenBean
entryRuleMessageDrivenBean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageDrivenBeanRule()); }
	 iv_ruleMessageDrivenBean=ruleMessageDrivenBean 
	 { $current=$iv_ruleMessageDrivenBean.current; } 
	 EOF 
;

// Rule MessageDrivenBean
ruleMessageDrivenBean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='MessageDrivenBean' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMessageDrivenBeanAccess().getMessageDrivenBeanKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMessageDrivenBeanAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageDrivenBeanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMessageDrivenBeanAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMessageDrivenBeanAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSingletonSessionBean
entryRuleSingletonSessionBean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingletonSessionBeanRule()); }
	 iv_ruleSingletonSessionBean=ruleSingletonSessionBean 
	 { $current=$iv_ruleSingletonSessionBean.current; } 
	 EOF 
;

// Rule SingletonSessionBean
ruleSingletonSessionBean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SingletonSessionBean' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSingletonSessionBeanAccess().getSingletonSessionBeanKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSingletonSessionBeanAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingletonSessionBeanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSingletonSessionBeanAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSingletonSessionBeanAccess().getRightCurlyBracketKeyword_3());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


